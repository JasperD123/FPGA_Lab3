module refound_machine(
input  sys_clk,// system clock: 50N 
input  sys_rst_n, // Reset button 
input  coin_one, // Input money:only ca
input  coin_half, // Input money:only ca
 output  cola ,// output cola: 0 means
  output reg  re_coin_one, 
 output reg re_coin_half
);
// machine state decode 
parameter  IDLE= 3'b001;
parameter  HALF=3'b010; 
parameter  ONE=3'b011; 
parameter  ONE_HALF=3'b100;

// machine variable 
reg [2:0] st_next;
reg [2:0] st_cur;
reg re_coin_one_reg; // output cola: 0 means
reg   re_coin_half_reg;// output cola: 0 means
always @(posedge sys_clk or negedge sys_rst_n) begin
	if (!sys_rst_n)
	begin
	st_cur <= IDLE; end 
	else
	begin
	st_cur <= st_next; end 
	end
always @(*) begin
	case(st_cur)
	IDLE:
	if (coin_one == 1'b1)
	st_next = ONE; 
	else if (coin_half == 1'b1)
	st_next = HALF; 
	else
	st_next= IDLE;
	HALF:
	if (coin_one==1'b1)
	st_next= ONE_HALF; 
	else if (coin_half == 1'b1)
	st_next =ONE;
	else st_next=HALF;
	ONE:
	if (coin_one==1'b1)
	st_next= IDLE; 
	else if (coin_half == 1'b1)
	st_next =ONE_HALF;
	else st_next=ONE;
	ONE_HALF:
	if (coin_one==1'b1)
	st_next= IDLE; 
	else if (coin_half == 1'b1)
	st_next =IDLE;
	else st_next=ONE_HALF;
	
	endcase 
	end

reg cola_r;
always @(posedge sys_clk or negedge sys_rst_n) begin
	if (!sys_rst_n)begin 
	cola_r <= 1'b0;
		 re_coin_one<=re_coin_one_reg;
	 re_coin_half<=re_coin_half_reg;
	 end 
	else begin 
	case(st_cur)
	IDLE: begin	
		cola_r<=0;
		   re_coin_one_reg<=0;
			re_coin_half_reg<=0;
			re_coin_one<=0;
			re_coin_half<=0; 
			end
	HALF:begin
			  cola_r<=0;
			 re_coin_one<=0;
			re_coin_half<=0; 
			re_coin_one_reg<=0;
			re_coin_half_reg<=1;
    end
	ONE:begin
         if(coin_one==1'b1)begin
			  cola_r<=1;
			  	
	     	  re_coin_one_reg<=0;
				re_coin_half_reg<=0;
			  end
			  else begin 
			  cola_r<=0;
				re_coin_one_reg<=1;
				re_coin_half_reg<=0;
			  end
   end 
   ONE_HALF:begin 
			if(coin_one==1'b1)begin
			  cola_r<=1;
			  re_coin_one_reg<=0;
			re_coin_half_reg<=0;
			  end 
			 else if(coin_half==1'b1)begin
			 cola_r<=1;
			 re_coin_one_reg<=1;
			re_coin_half_reg<=1;
			 end 
			  else begin 
			  cola_r<=0;
			  re_coin_one_reg<=1;
			 re_coin_half_reg<=1;
			  end 
     end 	

		default:begin 
		
	    cola_r<=0;
		end 
	endcase
	end 
	end 
assign cola = cola_r;

endmodule
